from loader import dp, bot
from aiogram import types
from aiogram.dispatcher import FSMContext
import texts
from states import State
import aiotable
from aiogram.utils.exceptions import BotBlocked, ChatNotFound
import asyncio
from datetime import datetime, timedelta, timezone

@dp.message_handler(commands=['start'], state="*")
async def send_welcome(message: types.Message, state: FSMContext):
    with open('images/max.jpeg', 'rb') as photo:
        await message.answer_photo(photo, caption=texts.hi)
        await State.enter_name.set()
        await state.update_data(sum='0') 
        
        username = str(message.from_user.username)
        utc_plus_3 = timezone(timedelta(hours=3))
        now_utc3 = datetime.now(utc_plus_3)
        datetime_str = now_utc3.strftime("%Y-%m-%d %H:%M:%S")

        await aiotable.append_user_strict(str(datetime_str), str(message.from_user.id), str(username))
        

@dp.message_handler(commands=['terms'], state="*")
async def send_welcome(message: types.Message, state: FSMContext):
    with open('doc.pdf', 'rb') as f:
        await message.answer_document(f)
        

@dp.message_handler(commands=['help'], state="*")
async def send_welcome(message: types.Message, state: FSMContext):
    await message.answer("–ï—Å–ª–∏ –í–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø–∏—à–∏—Ç–µ @lenkkey")
    

@dp.message_handler(commands=['check'], state="*")
async def send_welcome(message: types.Message, state: FSMContext):
    print('here')
    all = await aiotable.get_all()
    for i, user in enumerate(all[1:]):
        print(i, user[1])
        num = i + 2
        user_status = await bot.get_chat_member(-1001016200452, user[1])

        if user_status['status'] == 'left':
            await aiotable.update_cell_strict(num, 9, 'no')
            print('no')
        else:
            await aiotable.update_cell_strict(num, 9, 'yes')
            print('yes')
            
    await aiotable.update_cell_strict(1, 9, 'no')
    

@dp.message_handler(commands=['broadcast'], state="*")
async def send_welcome(message: types.Message, state: FSMContext):
    print(message.text)
    nums = message.text.split()
    n1 = nums[1]
    n2 = nums[2]
    n3 = nums[3]
    all = await aiotable.get_all()
    user_ids = []
    for user in all[1:]:
        user_ids.append(user[1])
    user_ids = list(set(user_ids))
    text = f"""–í–Ω–∏–º–∞–Ω–∏–µ, —Ñ–∏–Ω–∏—à! üèÅ
–†–æ–∑—ã–≥—Ä—ã—à —Å–æ—Å—Ç–æ—è–ª—Å—è, –∏ —É –Ω–∞—Å –µ—Å—Ç—å —Ç—Ä–∏ —á–µ–º–ø–∏–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π –º–µ—Ä—á –æ—Ç IRONSTAR:
‚ö°Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ {n1} - —Ç–æ–ª—Å—Ç–æ–≤–∫—É –¥–ª—è —Ç—ë–ø–ª—ã—Ö —Å—Ç–∞—Ä—Ç–æ–≤!
‚ö°Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ {n2}  - —Ñ—É—Ç–±–æ–ª–∫—É –¥–ª—è –∂–∞—Ä–∫–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!
‚ö°Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ {n3} - –∫–µ–ø–∫—É –¥–ª—è —Å—Ç–∏–ª—å–Ω–æ–≥–æ –∑–∞–±–µ–≥–∞!

–í—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º ‚Äî —Å–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! –°–ª–µ–¥–∏ –∑–∞ –Ω–æ–≤—ã–º–∏ —Å—Ç–∞—Ä—Ç–∞–º–∏ –Ω–∞ —Å–∞–π—Ç–µ üëâ <a href="iron-star.com">IRONSTAR</a>
–î–æ —Å–ª–µ–¥—É—é—â–∏—Ö —Ä–µ–∫–æ—Ä–¥–æ–≤! üí™üî•"""
    for user_id in user_ids:
        try:
            await bot.send_message(user_id, text, disable_web_page_preview=True)
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {user_id}")
            await asyncio.sleep(1)  # –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–ø–∞–º–∞
        except BotBlocked:
            print(f"‚õî –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        except ChatNotFound:
            print(f"‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {user_id}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {user_id}: {e}")
